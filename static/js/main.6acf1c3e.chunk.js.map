{"version":3,"sources":["App.tsx","Components/GoodList/GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","ALPHABET","sort","prev","current","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,oECdQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SDFFC,G,MAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAcF,SAASC,EACPJ,EADF,GAGG,IADCK,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOP,GAEzB,OAAQK,GACN,KAAKP,EAASU,SACZD,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAmBA,EAAQC,cAAcF,MAC3D,MACF,KAAKZ,EAASe,OACZN,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAmBA,EAAQG,OAASJ,EAAKI,UAU/D,OAJIR,GACFC,EAAaQ,UAGRR,G,SAhCJT,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMkB,EAAoB,WAC/B,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAASnB,EAASqB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYlB,IAAaP,EAASU,WACtCgB,QAxBmB,WACzBJ,EAAYtB,EAASU,WAmBjB,iCASA,wBACEc,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYlB,IAAaP,EAASe,SACtCW,QA7Ba,WACnBJ,EAAYtB,EAASe,SAwBjB,4BASA,wBACES,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYjB,IAChBkB,QA7BQ,WACdN,GAAc,SAAAP,GAAO,OAAKA,MAwBtB,sBASEN,IAAaP,EAASqB,OAASb,IAC/B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA3CI,WACZJ,EAAYtB,EAASqB,MACrBD,GAAc,IAsCR,sBAUJ,6BACE,6BACE,cAAC,EAAD,CAAUlB,MAAOI,EAAkBD,EACjC,CAAEE,WAAUC,yBErHxBmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6acf1c3e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport { GoodList } from './Components/GoodList';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((prev, current) => current.localeCompare(prev));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((prev, current) => current.length - prev.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<{}> = () => {\n  const [isReversed, setIsReversed] = useState(true);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(true);\n  };\n\n  const reverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': isReversed })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || !isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          <GoodList goods={getReorderedGoods(goodsFromServer,\n            { sortType, isReversed })}\n          />\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: Array<string>;\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}